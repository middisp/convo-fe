input.svelte-1g1xjfv{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;position:absolute;padding:0;width:1px}label.svelte-1g1xjfv{position:relative;width:100%;display:block}label.svelte-1g1xjfv:before,label.svelte-1g1xjfv:after{content:"";display:block;top:0;position:absolute;right:0;top:50%;transform:translateY(-50%)}label.svelte-1g1xjfv:before{background-color:var(--bodyBGColor);border:solid 1px var(--borderColor);border-radius:15px;height:30px;width:60px}label.svelte-1g1xjfv:after{background-color:#ddd;border:solid 1px var(--borderColor);height:25px;width:25px;border-radius:50%;position:absolute;right:31px;transition:all 0.25s ease-in}input:checked+label.svelte-1g1xjfv:after{background-color:var(--success);border:solid 1px var(--successDark);right:3px}
.userDetails.svelte-1v6aass{background:#fff;border:solid 1px var(--borderColor);border-radius:10px;margin-top:8em;padding:6em 1em 1em;position:relative}.passwordManagement.svelte-1v6aass{margin-top:2em}img.svelte-1v6aass{border-radius:50%;box-shadow:0 0 10px rgba(0, 0, 0, 0.5);margin:0 auto;left:50%;position:absolute;top:-100px;transform:translateX(-50%);max-width:200px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */